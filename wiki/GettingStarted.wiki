#summary howto get things up and running
#labels Featured,Phase-Deploy,Phase-Requirements

= Introduction =

*tg4w* is a _translator_, so it sits logically between two other pieces of software, translating the output from one into the input of the other. These two pieces of software are:

  * *!TestGen4Web*
   This is the Firefox extension that allows you to record your actions on the browser. You press the "Record" button, go around clicking links, buttons and filling forms, press "Stop", and you end up with a XML file that describes what you just did. This XML file is what *tg4w* takes as input.

  * *!FireWatir*
   This is a library for Ruby that allows you to control an instance of Firefox with code like `ff.text_field(:name,"q").set("ruby")`.
   As it's not a program _per se_, we don't actually give it _input_. We write code that uses its classes and methods to reproduce the actions we recorded with !TestGen4Web. That code is what *tg4w* outputs.

So the first thing we need is to get those two working. As tg4w required a few changes from both !TestGen4Web and !FireWatir, and those aren't yet present in current releases, we'll have to patch things up from svn.

= TestGen4Web from SVN =

We first need to install the current release (there must be a better way of doing this, but this works). Go to 

http://developer.spikesource.com/frs/?group_id=14&release_id=71

download and install the latest version (0.41.1-beta). This will create a directory `{3c20433a-61bc-42fe-831d-415860e17283}` under `~/.mozilla/firefox/vllrmpro.default/extensions` (or wherever else your firefox extensions are kept).

Now we have to replace this directory by the !TestGen4Web code from SVN.

Choose a directory where you want to keep that code and check it out from SVN (mine is `~work/`):
{{{
cd ~/work
svn co http://scm.spikesource.com/testgen4web
}}}

This will create a "testgen4web" directory in the chosen directory. Now we *replace* the old directory by a link to our checked out code:

{{{
cd ~/.mozilla/firefox/vllrmpro.default/extensions
rm \{3c20433a-61bc-42fe-831d-415860e17283\} -f
ln -s ~/work/testgen4web/extension \{3c20433a-61bc-42fe-831d-415860e17283\}
}}}

[If you're on Windows, emptying out the original directory and copying the contents of testgen4web/extension/ into it should work]

Done, right? No. We still need to download and apply the patch. Download it from http://tg4rb.googlecode.com/svn/trunk/tg4w_patch.txt and place it into testgen4web/extension before applying it.

{{{
cd ~/work/testgen4web/extension
wget http://tg4rb.googlecode.com/svn/trunk/tg4w_patch.txt
patch -p0 < tg4w_patch.txt
}}}

And, voilÃ¡! Restart your Firefox and you should see... well, nothing different. The patch basically deals with how the XML file is generated. 

This part now done, we need to get !FireWatir.


= FireWatir from SVN =

This is a bit more straightforward. Check out the code from svn into a directory of your choice:

{{{
cd ~/work
svn checkout http://firewatir.googlecode.com/svn/trunk/ firewatir
}}}

Get the patch and apply it:

{{{
cd ~/work/firewatir
wget http://tg4rb.googlecode.com/svn/trunk/firewatir_patch.txt
patch -p0 < firewatir_patch.txt
}}}

Now we build the gem again and install it:

{{{
cd ~/work/firewatir/FireWatir
gem build firewatir.gemspec
sudo gem install firewatir-1.0.2
}}}

And that's it. The foundations are laid, now let's get to *tg4rb* itself.


= tg4rb: using the gem =

TODO

= tg4rb: from SVN =

TODO

